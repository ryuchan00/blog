プロになるためのWeb技術入門　感想　前編
読書感想

Web業界に転職して、そろそろ1年が経過します。

今まで勉強した知識にどの程度抜け漏れがあるのか確認のために、今更ながら「プロになるためのWeb技術入門」を読みました。

改めて理解が促進した箇所、新たな発見があった箇所を列挙します。

[プロになるためのWeb技術入門](https://www.amazon.co.jp/%E3%80%8C%E3%83%97%E3%83%AD%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AEWeb%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80%E3%80%8D-%E2%80%95%E2%80%95%E3%81%AA%E3%81%9C%E3%80%81%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AFWeb%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%92%E9%96%8B%E7%99%BA%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B-%E5%B0%8F%E6%A3%AE-%E8%A3%95%E4%BB%8B/dp/4774142352)

# リソースの位置を示すurl

URLの仕組みは、なんとなく使っているので、改めて復習しました。

>インターネット上のコンテンツを一意に指定するための仕組みが「URL(Uniform Rsource Locator)なのです。

>日本語に訳すと「統一資源位置子（とういつしげんいちし）」となります。

>|http|://|/www.littleforest.jp|/|webtext/index.html|
>|:--|:--|:--|:--|:--|
>|スキーム||ホスト名||パス名|

## スキーム

>スキームは、リソースを取得するための方法を表します。Webアプリケーションにえいては、ほとんどの場合「http」となります

>|スキーム名|説明|
>|:--|:--|
>|https|暗号化されたhttp通信を表すスキーム|
>|mailto|電子メールの宛先を表すスキーム|
>|ftp|FTPプロトコルによる入手を表すスキーム|
>|file|ファイルシステム中のファイルやディレクトリを参照するためのスキーム|

業務では、httpsとftpはよく触れる印象があります。

## URLとURIの違い

他のWeb技術の基礎本を読んでいるときに、URLという単語という単語がほぼ登場せず、代わりにURIという単語で使われていることがあります。

URLとURIの違いはなんでしょうか。

>URIは、URLをより拡張した概念として、URI(Uniform Resource Idenrifier)が考え出されたのです。

>URIとは、URLに加えて「URN(Uniform Rsource Name)」を合わせたものを指します。

>URNはインターネット上に存在する名前を一意に識別するために用意されたものです。

>URLの場合は、ホストが移動すると移動先のURLを知らないとアクセスできなくなります。

>URNは、このようなリソースの移動に関しての問題を解決するために、インターネット上に存在するリソースに対しては統一的な名前を決めようと考え出されたものです。

>例えば、「nrn:itif:rfc:2616」は、HTTP1.1のRFCに対するURNです。この文書が物理的にどのような位置に存在しようと、同じURNで指し示すことができるというわけです。

>現状ではURNはあまり利用されておらず、実質的にはURIもURLもほぼ同じ意味で扱われています。

混乱の元はURIとURLもほぼ同様の意味で使用されているため、なぜ2種類もの呼び方があるのか理解できないことです。

このように背景を理解してしまえば、理解しやすいですね。

# Webベンチャーで働いている人に、あまり馴染みのないサーブレット、JSP

PHPやRubyでアプリケーションを作っていると、Javaに対してあまり馴染みがありません。

しかしJavaもエンタープライズでのWeb開発で使用されている言語、歴史的変遷だけでも知っておくのがいいかと思いました。

## サーブレットの誕生

>Webが普及しCGIが一般的になると、新たな問題が生まれました。

>1つはPerlの仕様による問題、もう一つは多数のリクエストによるアクセス負荷の増大する問題です。

>Java自体はWebアプリケーションのために開発された言語ではありません。しかし、Webアプリケーションは当時企業に置けるシステム開発でも主流になりつつありました。

>そこで、JavaEE(Java Enterprise Edition)の一部として「サーブレット(Servlet)」というWebアプリケーション開発をサポートするため目の機能が供給されるようになったのです。

>サーブレットはJavaで作られたHTMLなどのWebコンテンツを生成するためのプログラムのことで、CGIを経由して起動されるPerlやC言語のJava版に相当します。

>サーブレットは基本的にCGIと同じ考え方ですが、コンテンツを生成する言語がJavaであり、オブジェクト志向のサポートによって大規模アプリケーションの開発に向いていることと、Webサーバーと同じプロセスの中でコンテンツを生成するプログラムが動作するため、CGIのように新たなプロセスを毎回起動する必要がなく、比較的高速に動作するということが利点でした。

Javaの優れた特徴をWebの世界に持ち込み、発展させたということですね。

ただJavaはエンタープライズ要素が強いので、なかなか個人開発では使用する機会がないです。

## サーブレットの弱点を改善したJSP(Java Server Pages)の誕生
